{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6*****","webpack:///./src/Supporter.js","webpack:///./src/schema/supporter.js"],"names":["NAMESPACE","ENDPOINT_SUPPORTERS","Supporter","config","http","Error","schema","schemaUtils","form","out","valid","validateSchema","length","ret","generateErrorObject","forEach","err","msg","push","message","fields","extractFieldByError","reject","generateErrorResponse","validateForm","cf","cp","url","post","opts","_opts","get","params","service"],"mappings":"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","file":"Supporter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Groundwork\"] = factory();\n\telse\n\t\troot[\"Groundwork\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","import Dictionary from './Dictionary';\nimport SchemaUtils from './SchemaUtils';\nimport { urlJoin, only } from './utils';\n\nimport schema from './schema/supporter';\n\n/** @type {String} - Top level endpoint */\nconst NAMESPACE = 'bucket';\n\n/** @type {String} - API endpoints for resource */\nconst ENDPOINT_SUPPORTERS = 'supporters';\n\n/**\n * Manage Supporter endpoint. Supporter POSTs are validated before a request\n * is made to the API.\n */\nexport default class Supporter {\n  /** @type {String} */\n  static service = 'supporters';\n\n  /**\n   * @param {Dictionary} [config] - configuration dictionary\n   * @param {Http} http\n   */\n  constructor(config, http) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    // Resource must have an Http instance\n    if (!http) {\n      throw new Error('Supporter requires Http');\n    }\n\n    /** @type {Http} */\n    this.http = http;\n\n    /** @type {Object} */\n    this.schema = schema;\n\n    /** @type {SchemaUtils} */\n    this.schemaUtils = SchemaUtils;\n  }\n\n  /**\n   * Validate payload object and return object with validation status and any\n   * errors that crop up\n   *\n   * @example\n   *\n   * validateForm({foo: 1, source: 'foo', email: 'bar'});\n   * // => { valid: false, fields: ['email'], msg: ['Invalid email address']}\n   *\n   *\n   * validateForm({source: 'foo', email: 'bar@baz.biz'});\n   * // => { valid: true, fields: [], msg: [] }\n   *\n   * @param {Object} form\n   * @return {Object}\n   */\n  validateForm(form = {}) {\n    let out = [true];\n    const valid = this.schemaUtils.validateSchema(form, this.schema);\n\n    if (valid.length > 0) {\n      const ret = this.http.generateErrorObject();\n      valid.forEach((err) => {\n        ret.msg.push(err.message);\n        ret.fields.push(this.schemaUtils.extractFieldByError(err));\n      });\n      out = [false, Promise.reject(this.http.generateErrorResponse(ret))];\n    }\n    return out;\n  }\n\n  /**\n   * POST a supporter record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * @example\n   * // validation fail\n   * supporter.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} form\n   * @return {Promise}\n   */\n  create(form = {}) {\n    // Return a mock error response with validation errors\n    const [cf, cp] = this.validateForm(form);\n    if (!cf) { return cp; }\n\n    const url = urlJoin(NAMESPACE);\n    return this.http.post(url, form);\n  }\n\n  /**\n   * Fetch a collection of Supporter objects.\n   * Pagination information can be sent as well. Opts are whitelisted\n   * to only the fields listed.\n   *\n   * @param {Object} opts\n   * @param {Number} [opts.page] - page number\n   * @param {Number} [opts.perPage] - donations per page\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const _opts = only(['page', 'perPage'], opts);\n    return this.http.get(urlJoin(NAMESPACE, ENDPOINT_SUPPORTERS),\n                         { params: _opts });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Supporter.js\n **/","/*eslint-disable quote-props */\n\nexport default {\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'address1': {\n      'id': 'address1',\n      'type': 'string'\n    },\n    'address2': {\n      'id': 'address2',\n      'type': 'string'\n    },\n    'city': {\n      'id': 'city',\n      'type': 'string'\n    },\n    'country': {\n      'id': 'country',\n      'type': 'string'\n    },\n    'email': {\n      'id': 'email',\n      'type': 'string'\n    },\n    'externalId': {\n      'id': 'externalId',\n      'type': 'string'\n    },\n    'familyName': {\n      'id': 'familyName',\n      'type': 'string'\n    },\n    'givenName': {\n      'id': 'givenName',\n      'type': 'string'\n    },\n    'postalCode': {\n      'id': 'postalCode',\n      'type': 'string'\n    },\n    'source': {\n      'id': 'source',\n      'type': 'string'\n    },\n    'state': {\n      'id': 'state',\n      'type': 'string'\n    },\n    'tags': {\n      'id': 'tags',\n      'type': 'object',\n      'properties': {}\n    }\n  },\n  'required': []\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/schema/supporter.js\n **/"],"sourceRoot":""}