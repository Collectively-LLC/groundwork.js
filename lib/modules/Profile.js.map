{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///./src/Profile.js","webpack:///./src/schema/profile.js"],"names":["NAMESPACE","ENDPOINT_PROFILE","ENDPOINT_PASSWORD_RESET","Profile","config","http","Error","schema","schemaUtils","profile","_schema","out","valid","validateSchema","length","ret","generateErrorObject","forEach","err","msg","push","message","fields","extractFieldByError","reject","generateErrorResponse","gwid","url","get","validateProfile","cf","cp","post","putSchema","required","put","email","token","password","service"],"mappings":"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","file":"Profile.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Groundwork\"] = factory();\n\telse\n\t\troot[\"Groundwork\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","import Dictionary from './Dictionary';\nimport SchemaUtils from './SchemaUtils';\nimport schema from './schema/profile';\nimport { urlJoin } from './utils';\n\nimport { cloneDeep } from 'lodash';\n\n/** @type {String} - API endpoint for resource */\nconst NAMESPACE = 'the-claw';\n\n/** @type {String} - API endpoint for profile resource */\nconst ENDPOINT_PROFILE = 'profiles';\n\n/** @type {String} - API endpoint for password reset */\nconst ENDPOINT_PASSWORD_RESET = 'password_resets';\n\nexport default class Profile {\n  /** @type {String} */\n  static service = 'profiles';\n\n  /**\n   * @param {Dictionary} [config] - configuration dictionary\n   * @param {Http} http\n   */\n  constructor(config, http) {\n    /** @type {Dictionary} */\n    this.config = (config && config instanceof Dictionary) ?\n      config : new Dictionary();\n\n    // Resource must have an Http instance\n    if (!http) {\n      throw new Error('Profile requires Http');\n    }\n\n    /** @type {Http} */\n    this.http = http;\n\n    /** @type {String} */\n    this.schema = schema;\n\n    /** @type {SchemaUtils} */\n    this.schemaUtils = SchemaUtils;\n  }\n\n  /**\n   * Validate payload object and return object with validation status and any\n   * errors that crop up\n   *\n   * @example\n   *\n   * validateProfile({foo: 1, source: 'foo', email: 'bar'});\n   * // => { valid: false, fields: ['email'], msg: ['Invalid email address']}\n   *\n   *\n   * validateProfile({source: 'foo', email: 'bar@baz.biz'});\n   * // => { valid: true, fields: [], msg: [] }\n   *\n   * @param {Object} [profile={}] - profile object\n   * @param {Object} [_schema=this.schema] - JSON schema for profile\n   * @return {Object}\n   */\n  validateProfile(profile = {}, _schema = this.schema) {\n    let out = [true];\n    const valid = this.schemaUtils.validateSchema(profile, _schema);\n\n    if (valid.length > 0) {\n      const ret = this.http.generateErrorObject();\n      valid.forEach((err) => {\n        ret.msg.push(err.message);\n        ret.fields.push(this.schemaUtils.extractFieldByError(err));\n      });\n      out = [false, Promise.reject(this.http.generateErrorResponse(ret))];\n    }\n    return out;\n  }\n\n  /**\n   * Fetch a single Profile object\n   *\n   * @param {String} [gwid=''] - profile gwid\n   * @return {Promise}\n   */\n  fetch(gwid = '') {\n    const url = urlJoin(NAMESPACE, ENDPOINT_PROFILE, gwid);\n    return this.http.get(url);\n  }\n\n  /**\n   * POST a Profile record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * @example\n   * // validation fail\n   * profile.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} [profile={}] - profile object\n   * @return {Promise}\n   */\n  create(profile = {}) {\n    // Return a mock error response with validation errors\n    const [cf, cp] = this.validateProfile(profile);\n    if (!cf) { return cp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_PROFILE);\n    return this.http.post(url, profile);\n  }\n\n  /**\n   * PUT a Profile record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * @example\n   * // validation fail\n   * profile.update({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {String} [gwid=''] - gwid of profile to update\n   * @param {Object} [profile={}] - fields to update\n   * @return {Promise}\n   */\n  update(gwid = '', profile = {}) {\n    // Return a mock error response with validation errors\n    const putSchema = cloneDeep(this.schema);\n    delete putSchema.required; // No required fields in PUTs\n    const [cf, cp] = this.validateProfile(profile, putSchema);\n    if (!cf) { return cp; }\n\n    const url = urlJoin(NAMESPACE, ENDPOINT_PROFILE, gwid);\n    return this.http.put(url, profile);\n  }\n\n  /**\n   * Trigger a password reset for an email\n   *\n   * Email will be sent to the requested address with a reset link containing\n   * a token\n   *\n   * @param {String} [email=''] - profile email\n   * @return {Promise}\n   */\n  requestResetToken(email = '') {\n    const url = urlJoin(NAMESPACE, ENDPOINT_PASSWORD_RESET, '');\n    return this.http.post(url, { email });\n  }\n\n  /**\n   * PUT the new password and token to the API\n   *\n   * @param {String} [token=''] - reset token\n   * @param {String} [password=''] - new password\n   * @return {Promise}\n   */\n  resetPassword(token = '', password = '') {\n    const url = urlJoin(NAMESPACE, ENDPOINT_PASSWORD_RESET, token);\n    return this.http.put(url, { token, password });\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Profile.js\n **/","/*eslint-disable quote-props */\n\nexport default {\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'gwid': {\n      'id': 'gwid',\n      'type': 'string'\n    },\n    'email': {\n      'id': 'email',\n      'type': 'string'\n    },\n    'isStaff': {\n      'id': 'isStaff',\n      'type': 'boolean'\n    },\n    'isActive': {\n      'id': 'isActive',\n      'type': 'boolean'\n    },\n    'dateJoined': {\n      'id': 'dateJoined',\n      'type': 'string',\n      'format': 'date-time'\n    },\n    'dateModified': {\n      'id': 'dateModified',\n      'type': 'string',\n      'format': 'date-time'\n    },\n    'dateOfBirth': {\n      'id': 'dateOfBirth',\n      'type': ['string', 'null'],\n      'format': 'date-time'\n    },\n    'givenName': {\n      'id': 'givenName',\n      'type': 'string'\n    },\n    'familyName': {\n      'id': 'familyName',\n      'type': 'string'\n    },\n    'honorificPrefix': {\n      'id': 'honorificPrefix',\n      'type': 'string'\n    },\n    'honorificSuffix': {\n      'id': 'honorificSuffix',\n      'type': 'string'\n    },\n    'gender': {\n      'id': 'gender',\n      'type': ['integer', 'null'],\n      'minimum': 0,\n      'maximum': 4\n    },\n    'genderIdentity': {\n      'id': 'genderIdentity',\n      'type': 'string'\n    },\n    'partyIdentification': {\n      'id': 'partyIdentification',\n      'type': ['integer', 'null'],\n      'minimum': 0,\n      'maximum': 4\n    },\n    'password': {\n      'id': 'password',\n      'type': 'string'\n    },\n    'employer': {\n      'id': 'employer',\n      'type': 'string'\n    },\n    'occupation': {\n      'id': 'occupation',\n      'type': 'string'\n    },\n    'phoneNumber': {\n      'id': 'phoneNumber',\n      'type': 'string'\n    },\n    'address1': {\n      'id': 'address1',\n      'type': 'string'\n    },\n    'address2': {\n      'id': 'address2',\n      'type': 'string'\n    },\n    'locality': {\n      'id': 'locality',\n      'type': 'string'\n    },\n    'state': {\n      'id': 'state',\n      'type': 'string'\n    },\n    'zipCode': {\n      'id': 'zipCode',\n      'type': 'string'\n    }\n  },\n  'required': [\n    'email',\n    'familyName',\n    'givenName',\n    'password'\n  ]\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/schema/profile.js\n **/"],"sourceRoot":""}