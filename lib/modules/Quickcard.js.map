{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6***","webpack:///./src/Quickcard.js","webpack:///./src/schema/quickcard.js","webpack:///./src/schema/quickcardPay.js"],"names":["ENDPOINT_QUICKCARD","Quickcard","opts","params","attachIdentity","gwid","perPage","undefined","url","namespace","fetchCollection","id","validateId","idv","idp","quickcard","_quickcard","checkQuickcard","validatePayment","valid","response","http","generateErrorResponse","reject","post","time","date","apply","put","deleted","payment","_payment","validateSchema","pv","pp","service"],"mappings":"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","file":"Quickcard.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Groundwork\"] = factory();\n\telse\n\t\troot[\"Groundwork\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","import Payment from './Payment';\nimport schema from './schema/quickcard';\nimport schemaPay from './schema/quickcardPay';\nimport { urlJoin, has, only, epoch, max } from './utils';\n\n/** @type {String} - API endpoint for resource */\nconst ENDPOINT_QUICKCARD = 'quickcards';\n\n/**\n * Create and view quickcards\n *\n * list(opts) - get a filtered list of quickcards\n * create(quickcard) - create a new quickcard\n * fetch(id) - fetch a quickcard object\n *\n */\nexport default class Quickcard extends Payment {\n  /** @type {String} */\n  static service = 'quickcards';\n\n  /**\n   * Fetch a collection of Quickcard objects for a specific gwid. We try\n   * to enforce the inclusion of a gwid if one is present in CONFIG_AUTH\n   *\n   * @param {Object} opts\n   * @param {String} opts.gwid - gwid is required\n   * @param {String} [opts.email] - filter on email\n   * @param {Number} [opts.page] - page number\n   * @param {Number} [opts.perPage] - quickcards per page\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const params = only(['gwid', 'email', 'page', 'perPage'],\n                     this.attachIdentity(opts));\n\n    // Allow opts to Override the gwid from config\n    if (has(opts, 'gwid')) { params.gwid = opts.gwid; }\n\n    // Max 50 p/page\n    if (has(opts, 'perPage')) { params.perPage = max(opts.perPage); }\n\n    // Failsafe to force gwid property into place no matter what\n    if (!has(params, 'gwid')) { params.gwid = undefined; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD);\n    return this.fetchCollection(url, params);\n  }\n\n  /**\n   * Fetch a list of all donations made for a quickcard\n   *\n   * @param {String} id - quickcard id\n   * @return {Promise}\n   */\n  listDonations(id = '') {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD, id, 'donations');\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * Fetch a single Quickcard object\n   *\n   * @param {String} id - quickcard id\n   * @return {Promise}\n   */\n  fetch(id = '') {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD, id);\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * POST a quickcard record to the API\n   *\n   * User must be authed / have a gwid\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * Note: All of the values in the object passed to the method should have had\n   * their types coerced already or validation will fail.\n   *\n   * @example\n   * // validation fail\n   * donation.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} [quickcard]\n   * @return {Promise}\n   */\n  create(quickcard = {}) {\n    const _quickcard = this.attachIdentity(quickcard);\n    const checkQuickcard = this.validatePayment(_quickcard, schema);\n\n    // Return a mock error response with validation errors\n    if (checkQuickcard.valid === false) {\n      const response = this.http.generateErrorResponse(checkQuickcard);\n      return Promise.reject(response);\n    }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD);\n    return this.http.post(url, _quickcard);\n  }\n\n  /**\n   * Delete (cancel) a quickcard\n   *\n   * Note: Quickcards can be cancelled on a date in the future by passing\n   * additional arguments.\n   *\n   * @example\n   * // Cancel quickcard abc123 today\n   * del('abc123');\n   *\n   * // Set a cancellation date of Oct 13, 2015 for quickcard abc123\n   * del('abc123', 2015, 10, 13)\n   *\n   * @param {String} id - quickcard id\n   * @param {...time<number>} [time] - year, month, day for a specific epoch\n   * @return {Promise}\n   */\n  del(id = '', ...time) {\n    const date = epoch.apply(null, time);\n\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const url = urlJoin(this.namespace, ENDPOINT_QUICKCARD, id);\n    return this.http.put(url, { deleted: date });\n  }\n\n  /**\n   * Make a Quick Donate Payment - The Quick Donate endpoint can only be used if\n   * two conditions are met. First, the request needs to come from an\n   * authenticated user. Second, that authenticated user must have a stored and\n   * active Card object.\n   *\n   * @param {String} id - QuickCard id\n   * @param {Object} payment - payment object for QuickCard\n   * @return {Promise}\n   */\n  pay(id, payment = {}) {\n    // Must have an id\n    const [idv, idp] = this.validateId(id);\n    if (!idv) { return idp; }\n\n    const _payment = this.attachIdentity(payment);\n\n    // Validate payment and reject if errors\n    const [pv, pp] = this.validateSchema(_payment, schemaPay);\n    if (!pv) { return pp; }\n\n    const url = urlJoin(this.namespace,\n                        ENDPOINT_QUICKCARD,\n                        id,\n                        'donations');\n\n    return this.http.post(url, _payment);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Quickcard.js\n **/","/*eslint-disable quote-props */\n\nexport default {\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'amount': {\n      'id': 'amount',\n      'type': 'integer'\n    },\n    'currency': {\n      'id': 'currency',\n      'type': 'string'\n    },\n    'givenName': {\n      'id': 'givenName',\n      'type': 'string'\n    },\n    'gwid': {\n      'id': 'gwid',\n      'type': 'string'\n    },\n    'familyName': {\n      'id': 'familyName',\n      'type': 'string'\n    },\n    'address1': {\n      'id': 'address1',\n      'type': 'string'\n    },\n    'city': {\n      'id': 'city',\n      'type': 'string'\n    },\n    'state': {\n      'id': 'state',\n      'type': 'string'\n    },\n    'zip': {\n      'id': 'zip',\n      'type': 'string'\n    },\n    'country': {\n      'id': 'country',\n      'type': 'string'\n    },\n    'email': {\n      'id': 'email',\n      'type': 'string'\n    },\n    'phone': {\n      'id': 'phone',\n      'type': 'string'\n    },\n    'employer': {\n      'id': 'employer',\n      'type': 'string'\n    },\n    'occupation': {\n      'id': 'occupation',\n      'type': 'string'\n    },\n    'ccNum': {\n      'id': 'ccNum',\n      'type': 'string'\n    },\n    'ccExpMonth': {\n      'id': 'ccExpMonth',\n      'type': 'integer'\n    },\n    'ccExpYear': {\n      'id': 'ccExpYear',\n      'type': 'integer'\n    },\n    'ccCvc': {\n      'id': 'ccCvc',\n      'type': 'string'\n    },\n    'agreeToTerms': {\n      'id': 'agreeToTerms',\n      'type': 'boolean'\n    }\n  },\n  'required': [\n    'address1',\n    'agreeToTerms',\n    'ccCvc',\n    'ccExpMonth',\n    'ccExpYear',\n    'ccNum',\n    'city',\n    'country',\n    'email',\n    'employer',\n    'familyName',\n    'givenName',\n    'gwid',\n    'occupation',\n    'phone',\n    'state',\n    'zip'\n  ]\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/schema/quickcard.js\n **/","/*eslint-disable quote-props */\n\nexport default {\n  '$schema': 'http://json-schema.org/draft-04/schema#',\n  'id': '/',\n  'type': 'object',\n  'properties': {\n    'amount': {\n      'id': 'amount',\n      'type': 'integer'\n    },\n    'currency': {\n      'id': 'currency',\n      'type': 'string'\n    },\n    'tags': {\n      'id': 'tags',\n      'type': 'object'\n    },\n    'submittingUrl': {\n      'id': 'submittingUrl',\n      'type': 'string'\n    },\n    'emailTemplate': {\n      'id': 'emailTemplate',\n      'type': 'string'\n    },\n    'gwid': {\n      'id': 'gwid',\n      'type': 'string'\n    }\n  },\n  'required': [\n    'amount',\n    'gwid'\n  ]\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/schema/quickcardPay.js\n **/"],"sourceRoot":""}