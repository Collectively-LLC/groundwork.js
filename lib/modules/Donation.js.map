{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///./src/Donation.js"],"names":["ENDPOINT_DONATION","Donation","opts","whitelist","params","perPage","url","namespace","fetchCollection","id","donation","checkDonation","validatePayment","valid","response","http","generateErrorResponse","reject","_donation","attachIdentity","post","service"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;;;;AACA;;;;AACA;;;;AAEA;AACA,KAAMA,oBAAoB,WAA1B;;AAEA;;;;;;;;;KAQqBC,Q;;;;;;;;;;;;AAInB;;;;;;;;;;;;;4BAagB;AAAA,WAAXC,IAAW,uEAAJ,EAAI;;AACd,WAAMC,YAAY,CAAC,MAAD,EAAS,cAAT,EAAyB,WAAzB,EAAsC,OAAtC,EAA+C,MAA/C,EACD,SADC,CAAlB;;AAGA,WAAMC,SAAS,iBAAKD,SAAL,EAAgBD,IAAhB,CAAf;AACA,WAAIE,OAAOC,OAAX,EAAoB;AAClBD,gBAAOC,OAAP,GAAiB,gBAAID,OAAOC,OAAX,CAAjB,CADkB,CACoB;AACvC;;AAED,WAAMC,MAAM,oBAAQ,KAAKC,SAAb,EAAwBP,iBAAxB,CAAZ;AACA,cAAO,KAAKQ,eAAL,CAAqBF,GAArB,EAA0BF,MAA1B,CAAP;AACD;;AAED;;;;;;;AA7BA;;;;6BAmCe;AAAA,WAATK,EAAS,uEAAJ,EAAI;;AACb,WAAMH,MAAM,oBAAQ,KAAKC,SAAb,EAAwBP,iBAAxB,EAA2CS,EAA3C,CAAZ;AACA,cAAO,KAAKD,eAAL,CAAqBF,GAArB,CAAP;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;8BAkBsB;AAAA,WAAfI,QAAe,uEAAJ,EAAI;;AACpB,WAAMC,gBAAgB,KAAKC,eAAL,CAAqBF,QAArB,qBAAtB;;AAEA;AACA,WAAIC,cAAcE,KAAd,KAAwB,KAA5B,EAAmC;AACjC,aAAMC,WAAW,KAAKC,IAAL,CAAUC,qBAAV,CAAgCL,aAAhC,CAAjB;AACA,gBAAO,kBAAQM,MAAR,CAAeH,QAAf,CAAP;AACD;;AAED,WAAMI,YAAY,KAAKC,cAAL,CAAoBT,QAApB,CAAlB;AACA,WAAMJ,MAAM,oBAAQ,KAAKC,SAAb,EAAwBP,iBAAxB,CAAZ;AACA,cAAO,KAAKe,IAAL,CAAUK,IAAV,CAAed,GAAf,EAAoBY,SAApB,CAAP;AACD;;;;;AAvEkBjB,S,CAEZoB,O,GAAU,W;mBAFEpB,Q","file":"Donation.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Groundwork\"] = factory();\n\telse\n\t\troot[\"Groundwork\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","import Payment from './Payment';\nimport schema from './schema/donation';\nimport { max, only, urlJoin } from './utils';\n\n/** @type {String} - API endpoint for resource */\nconst ENDPOINT_DONATION = 'donations';\n\n/**\n * Create and view donations\n *\n * list(opts) - get a filtered list of donations\n * create(donation) - create a new donation\n * fetch(id) - fetch a donation object\n *\n */\nexport default class Donation extends Payment {\n  /** @type {String} */\n  static service = 'donations';\n\n  /**\n   * Fetch a collection of Donation objects, filtering on gwid, subscription,\n   * quickCard and email.\n   *\n   * @param {Object} opts\n   * @param {String} [opts.gwid] - gwid to filter on\n   * @param {String} [opts.subscription] - sub id to filter on\n   * @param {String} [opts.quickCard] - quickcard id to filter on\n   * @param {String} [opts.email] - email to filter on\n   * @param {Number} [opts.page] - page number\n   * @param {Number} [opts.perPage] - donations per page\n   * @return {Promise}\n   */\n  list(opts = {}) {\n    const whitelist = ['gwid', 'subscription', 'quickCard', 'email', 'page',\n                     'perPage'];\n\n    const params = only(whitelist, opts);\n    if (params.perPage) {\n      params.perPage = max(params.perPage); // Max of 50\n    }\n\n    const url = urlJoin(this.namespace, ENDPOINT_DONATION);\n    return this.fetchCollection(url, params);\n  }\n\n  /**\n   * Fetch a single Donation object\n   *\n   * @param {String} id - donation id\n   * @return {Promise}\n   */\n  fetch(id = '') {\n    const url = urlJoin(this.namespace, ENDPOINT_DONATION, id);\n    return this.fetchCollection(url);\n  }\n\n  /**\n   * POST a donation record to the API\n   *\n   * The passed in form object will be validated. If it fails, a mock response\n   * with any errors will be sent back in a rejected Promise. This is to present\n   * the least amount of surprise to the developer.\n   *\n   * Note: All of the values in the object passed to the method should have had\n   * their types coerced already or validation will fail.\n   *\n   * @example\n   * // validation fail\n   * supporter.create({}).catch((err) => console.log(err));\n   * // => { status: 400, data: { error: { valid: false, ... } } ... }\n   *\n   * @param {Object} [donation]\n   * @return {Promise}\n   */\n  create(donation = {}) {\n    const checkDonation = this.validatePayment(donation, schema);\n\n    // Return a mock error response with validation errors\n    if (checkDonation.valid === false) {\n      const response = this.http.generateErrorResponse(checkDonation);\n      return Promise.reject(response);\n    }\n\n    const _donation = this.attachIdentity(donation);\n    const url = urlJoin(this.namespace, ENDPOINT_DONATION);\n    return this.http.post(url, _donation);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Donation.js\n **/"],"sourceRoot":""}